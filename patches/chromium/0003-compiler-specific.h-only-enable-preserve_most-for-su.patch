From f3d53dd05df56b30430dafd35b2ccb1c6e74319d Mon Sep 17 00:00:00 2001
From: kxxt <rsworktech@outlook.com>
Date: Fri, 2 Feb 2024 09:22:20 +0800
Subject: [PATCH 3/8] compiler-specific.h: only enable preserve_most for
 supported platforms

preserve_most attribute only supports X86-64 and AArch64 for now, as
documented on https://clang.llvm.org/docs/AttributeReference.html#preserve-most

Change-Id: I54369d439e5152523e10b7152043d50655a0e1c1
---
 base/compiler_specific.h | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/base/compiler_specific.h b/base/compiler_specific.h
index 6e45f97879f85..03f058b2064da 100644
--- a/base/compiler_specific.h
+++ b/base/compiler_specific.h
@@ -453,11 +453,12 @@ inline constexpr bool AnalyzerAssumeTrue(bool arg) {
 // Additionally, the initial implementation in clang <= 16 overwrote the return
 // register(s) in the epilogue of a preserve_most function, so we only use
 // preserve_most in clang >= 17 (see https://reviews.llvm.org/D143425).
+// Clang only supports preserve_most on X86-64 and AArch64 for now.
 // See https://clang.llvm.org/docs/AttributeReference.html#preserve-most for
 // more details.
-#if defined(ARCH_CPU_64_BITS) &&                       \
-    !(BUILDFLAG(IS_WIN) && defined(ARCH_CPU_ARM64)) && \
-    !defined(COMPONENT_BUILD) && defined(__clang__) && \
+#if (defined(ARCH_CPU_ARM64) || defined(ARCH_CPU_X86_64)) && \
+    !(BUILDFLAG(IS_WIN) && defined(ARCH_CPU_ARM64)) &&       \
+    !defined(COMPONENT_BUILD) && defined(__clang__) &&       \
     __clang_major__ >= 17 && HAS_ATTRIBUTE(preserve_most)
 #define PRESERVE_MOST __attribute__((preserve_most))
 #else
-- 
2.43.0

